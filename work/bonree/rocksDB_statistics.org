#+title: rocksDB测试结果
* 读取一层目录
** 第一次
10ms
*** File Read Latency Histogram By Level [default] **
**** Level 0 read latency histogram (micros):
Count: 13 Average: 28.0000  StdDev: 51.27
Min: 1  Median: 1.8750  Max: 176
Percentiles: P50: 1.88 P75: 9.00 P99: 176.00 P99.9: 176.00 P99.99: 176.00
------------------------------------------------------
[       0,       1 ]        3  23.077%  23.077% #####
(       1,       2 ]        4  30.769%  53.846% ######
(       2,       3 ]        1   7.692%  61.538% ##
(       3,       4 ]        1   7.692%  69.231% ##
(       6,      10 ]        1   7.692%  76.923% ##
(      76,     110 ]        2  15.385%  92.308% ###
(     170,     250 ]        1   7.692% 100.000% ##

**** Level 6 read latency histogram (micros):
Count: 4 Average: 23.2500  StdDev: 37.39
Min: 1  Median: 1.5000  Max: 88
Percentiles: P50: 1.50 P75: 2.00 P99: 88.00 P99.9: 88.00 P99.99: 88.00
------------------------------------------------------
[       0,       1 ]        1  25.000%  25.000% #####
(       1,       2 ]        2  50.000%  75.000% ##########
(      76,     110 ]        1  25.000% 100.000% #####
** 第二次
10ms
*** File Read Latency Histogram By Level [default] **
**** Level 0 read latency histogram (micros):
Count: 13 Average: 37.3846  StdDev: 64.73
Min: 1  Median: 1.5000  Max: 165
Percentiles: P50: 1.50 P75: 5.50 P99: 165.00 P99.9: 165.00 P99.99: 165.00
------------------------------------------------------
[       0,       1 ]        4  30.769%  30.769% ######
(       1,       2 ]        5  38.462%  69.231% ########
(       4,       6 ]        1   7.692%  76.923% ##
(     110,     170 ]        3  23.077% 100.000% #####

**** Level 6 read latency histogram (micros):
Count: 4 Average: 19.0000  StdDev: 30.02
Min: 1  Median: 1.5000  Max: 71
Percentiles: P50: 1.50 P75: 2.00 P99: 71.00 P99.9: 71.00 P99.99: 71.00
------------------------------------------------------
[       0,       1 ]        1  25.000%  25.000% #####
(       1,       2 ]        2  50.000%  75.000% ##########
(      51,      76 ]        1  25.000% 100.000% #####
** 第三次
*** File Read Latency Histogram By Level [default] **
**** Level 0 read latency histogram (micros):
Count: 13 Average: 42.6154  StdDev: 96.57
Min: 1  Median: 1.9000  Max: 323
Percentiles: P50: 1.90 P75: 5.50 P99: 323.00 P99.9: 323.00 P99.99: 323.00
------------------------------------------------------
[       0,       1 ]        2  15.385%  15.385% ###
(       1,       2 ]        5  38.462%  53.846% ########
(       2,       3 ]        2  15.385%  69.231% ###
(       4,       6 ]        1   7.692%  76.923% ##
(       6,      10 ]        1   7.692%  84.615% ##
(     170,     250 ]        1   7.692%  92.308% ##
(     250,     380 ]        1   7.692% 100.000% ##

**** Level 6 read latency histogram (micros):
Count: 4 Average: 1.7500  StdDev: 0.83
Min: 1  Median: 1.0000  Max: 3
Percentiles: P50: 1.00 P75: 2.00 P99: 2.96 P99.9: 3.00 P99.99: 3.00
------------------------------------------------------
[       0,       1 ]        2  50.000%  50.000% ##########
(       1,       2 ]        1  25.000%  75.000% #####
(       2,       3 ]        1  25.000% 100.000% #####

* 读取10层目录

** 第一次
13ms
*** File Read Latency Histogram By Level [default] **
**** Level 0 read latency histogram (micros):
Count: 13 Average: 34.1538  StdDev: 64.00
Min: 1  Median: 1.8333  Max: 193
Percentiles: P50: 1.83 P75: 9.00 P99: 193.00 P99.9: 193.00 P99.99: 193.00
------------------------------------------------------
[       0,       1 ]        4  30.769%  30.769% ######
(       1,       2 ]        3  23.077%  53.846% #####
(       2,       3 ]        2  15.385%  69.231% ###
(       6,      10 ]        1   7.692%  76.923% ##
(      51,      76 ]        1   7.692%  84.615% ##
(     110,     170 ]        1   7.692%  92.308% ##
(     170,     250 ]        1   7.692% 100.000% ##

**** Level 6 read latency histogram (micros):
Count: 4 Average: 18.0000  StdDev: 27.71
Min: 2  Median: 2.0000  Max: 66
Percentiles: P50: 2.00 P75: 2.00 P99: 66.00 P99.9: 66.00 P99.99: 66.00
------------------------------------------------------
(       1,       2 ]        3  75.000%  75.000% ###############
(      51,      76 ]        1  25.000% 100.000% #####

** 第二次
13ms

** 第三次
13ms

* 读取100层
1. 10ms

* 整理
** 算上字符串转化拼接的大致时间,还有db打开的时间
| 目录层数      | 1 |  5 | 10 | 20 | 50 | 100 | 150 | 200 |
| read time(ms) | 9 | 10 | 13 |  8 | 11 |  14 |  12 | 11  |
** db不打开的时间
| 目录层数      | 1 |  5 | 10 | 20 | 50 | 100 | 150 | 200 |
| read time(ms) | 10 | 9 | 9 |  9 | 11 |  10 |  10 | 11 |
** db一直打开的时间
| 目录层数        |       1 |       5 |      10 |      20 |      50 |     100 |     150 |     200 |
| read time(ns)   | 1612447 | 1720518 | 1860433 | 1705799 | 1698008 | 1722420 | 2145303 | 2467163 |
| again           | 1558488 | 1855510 | 1671312 | 1633828 | 1534369 | 1714991 | 1777932 | 2191479 |
| again and again | 1488676 | 1532652 | 1369813 | 2313436 | 1678362 | 2168992 | 1671762 | 2183322 |
** 保持多个线程对同一个db的读写
| stress\目录层数 |       1 |       5 |      10 |      20 |      50 |     100 |     200 |
| 100*10k读       | 1932899 | 2599876 | 3211137 | 2300892 | 2353840 | 2591752 | 2764457 |
| 100*10k写       | 1338267 | 1241842 | 1336166 | 1469649 | 1657070 | 2047748 | 2129342 |
** 结论
以200层目录深度的访问为例，rocksdb用于支撑一层目录或者200层目录时的读取延迟是在一个范围（1ms-3ms）内波动的，整体来看随着层数的加深，读取延迟在200前的增长趋势并不明显，因此建议选择第一种目录树存取方案。
* rocksDB目录树测试
** 最好情况，一直命中缓存
| 目录层数          |    1 |    5 |   10 |   20 |   50 |  100 |     150 |  200 |
| read time(micros) | 1612 | 1720 | 1860 | 1705 | 1698 | 1722 | 9999999 | 2467 |

** 最坏情况
一直不能命中缓存,但有读的时候把下一次要读的正好缓存上来了
| 目录层数          |    1 |    5 |   10 |   20 |   50 |  100 |  150 |  200 |
| read time(micros) | 7306 | 7565 | 7782 | 7564 | 7521 | 7990 | 8761 | 7846 |

** 最最坏情况
排除顺序扫的可能
| 目录层数          |    1 |    5 |   10 |    20 |    50 |   100 |   150 | 200 |
| read time(micros) | 7050 | 7162 | 9662 | 10296 | 12500 | 15912 | 19088 | 30905   |
