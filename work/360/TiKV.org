* TiKV
一个kv数据库，与hbase类似
** 一些概念
*** mvcc
*** 数据sync
TiKV 没有选择直接向磁盘上写数据，而是把数据保存在 RocksDB 中，具体的数据落地由 RocksDB 负责
*** Geo-Replication
异地数据同步技术
*** PD
placement Driver
用这个来指导自动分区，和数据迁移
*** 一致性
从spanner来，externally-consistent
*** 支持协处理器
*** RDBMS, and NoSQL
** TiKV Roadmap
This document defines the roadmap for TiKV development.

*** Raft
 Region Merge - Merge small Regions together to reduce overhead
 Local Read Thread - Process read requests in a local read thread
 Split Region in Batch - Speed up Region split for large Regions
 Raft Learner - Support Raft learner to smooth the configuration change process
 Raft Pre-vote - Support Raft pre-vote to avoid unnecessary leader election on network isolation
 Joint Consensus - Change multi members safely.
 Multi-thread Raftstore - Process Region Raft logic in multiple threads
 Multi-thread apply pool - Apply Region Raft committed entries in multiple threads
*** Engine
 Titan - Separate large key-values from LSM-Tree
 Pluggable Engine Interface - Clean up the engine wrapper code and provide more extendibility
*** Storage
 Flow Control - Do flow control in scheduler to avoid write stall in advance
*** Transaction
 Optimize transaction conflicts
 Distributed GC - Distribute MVCC garbage collection control to TiKV
*** Coprocessor
 Streaming - Cut large data set into small chunks to optimize memory consumption
 Chunk Execution - Process data in chunk to improve performance
 Request Tracing - Provide per-request execution details
*** Tools
 TiKV Importer - Speed up data importing by SST file ingestion
*** Client
 TiKV client (Rust crate)
 Batch gRPC Message - Reduce message overhead
*** PD
 Optimize Region metadata - Save Region metadata in detached storage engine
** 客户端驱动
Currently, the only interface to TiKV is the TiDB Go client and the TiSpark Java client.
* attention
RocksDB
