#+title: linux 命令
* inbox
** lsof (list open file,linux上所有东西视作文件)
+ lsof -i:port 
** time 后面跟命令，统计这个命令执行系统耗费的时间
** 了解一台机器 
*** 磁盘
#+BEGIN_SRC sh
  #查看磁盘大小和使用情况
  df -hl
#+END_SRC
**** 常见磁盘 
 1. fd：软驱 
 2. hd：IDE 磁盘
 3. sd：SCSI 磁盘
 4. tty：terminals 
 6. vd：virtio 磁盘 虚拟机磁盘
*** 查看各用户使用存储空间的大小
#+BEGIN_SRC sh
  # -s means only give a summarize
  du -sh /home/*
#+END_SRC
*** 查看linux内核信息
#+BEGIN_SRC sh
  uname －a 
#+END_SRC
*** 查看操作系统版本信息？
#+BEGIN_SRC sh
  cat /proc/version
#+END_SRC
*** 查看操作系统发行版信息?
#+BEGIN_SRC sh
  cat /etc/issue
#+END_SRC
*** cpu info
#+BEGIN_SRC sh
  #查询系统具有多少个逻辑核：
  cat /proc/cpuinfo | grep "processor" | wc -l

  #查询系统CPU的物理核数：
  cat /proc/cpuinfo | grep "cpu cores" | uniq

  #查询系统CPU是否启用超线程：
  cat /proc/cpuinfo | grep -e "cpu cores"  -e "siblings" | sort | uniq
#+END_SRC
** how to kill a program
[[https://itsfoss.com/how-to-find-the-process-id-of-a-program-and-kill-it-quick-tip/][参考]]
*** find pid by name
1. pidof
2. ps -aux |grep -i 'music'
*** kill
1. kill -9
2. kill -9 `pidof pname`
** 分析内存占用
** top
[[https://javawind.net/p131][参考]]
[[https://www.cnblogs.com/dragonsuc/p/5512797.html][更详细的版本]]
*** 内部命令
*** linux memory type
**** 3种内存，还有一种可选
***** pysical memory
真实物理内存
***** swap file
1. 存modified memory
2. 存频繁访问的物理内存
***** virtual memory
1. 抽象的，没有物理内存的地址和限制
2. 独立的，不同进程拥有不同的地址空间
3. sharing，一个引用可以多处使用
4. 灵活的，assign虚拟地址到文件
**** 内存管理
内存被划分为page 经典4k大小
** htop
+ 在某个进程上按l: lsof
** cat
concatenate and print
** grep
g/re/p
** find and locate
** man
*** DESCRIPTION
描述的是c接口，与系统调用的differences在NOTES里面
** free
** load
[[https://blog.csdn.net/ztf312/article/details/80342234][参考]]
** swap
*** 清空交换区
关闭在重启
#+BEGIN_SRC sh
swapoff -a && swapon -a
#+END_SRC
* 网络测试
** 找出两台机器的可用带宽
*** nc 接收
netcat
#+begin_example
nc -l 5001 > /dev/null 
-l : 接收下一次tcp连接
#+end_example
*** dd 发送
转换或拷贝数据
#+BEGIN_SRC sh
  #发往本机10G的数据
  dd if=/dev/zero bs=1MB count=10000 | nc localhost 5001

#+END_SRC
*** 测试结果
#+begin_example
10000+0 records in
10000+0 records out
10000000000 bytes (10 GB, 9.3 GiB) copied, 11.4357 s, 874 MB/s
#+end_example
* arch
** 装机
*** 分区，用cfdisk
*** 格式化
**** 引导分区-EFI system 的格式化
#+BEGIN_SRC sh
  mkfs.fat -F32 /dev/<partion>

#+END_SRC
*** 挂载
规划
*** 装服务
*** passwd 123
*** 安装过程中不识别ide硬盘，
改为achi模式，又导致window不能正常启动
[[https://itbbs.pconline.com.cn/diy/52883973.html][参考]]
如何获得管理员权限 [[https://www.zhihu.com/question/34471559][参考]]
*** 安装过程中可以联网，装完以后不能联网
1. 使用arch引导，安装dhcp
2. 由于引导盘中没有保留fstab，所以要进入已安装的系统，要手动mount一遍
3. 安装dhcpcd
4. 重启，打开archlinux 动态获取ip
5. ping

** 空投
1. [[https://blog.csdn.net/superstar_zbt/article/details/100883570][pacman 404]]
** 内存管理
** 系统管理


** AUR Arch User Repository
包含包描述(PKGBUILDS，build脚本)，当你需要从源码用makepkg编译的时候需要用到包描述信息。然后你有可能用pacman来安装刚刚编译的软件
** some kind of Repository
*** official repository
1. 包含了必要的包和流行的包，这里的包可以随时通过pacman来访问。pacman（packet manager）
2. 保证了软件包与上游同步更新
3. 保证了所管理的软件的兼容
**** core
1. Arch linux 启动时所需的东西
2. connecting to the internet
3. building packages
4. management and repair of support of filesystem
5. 系统设置程序
6. 还有上述几项的依赖和base meta 依赖

** pacman
pacman是archlinux的一个主要特性，旨在管理所有包，不论是官方的还是用户的

** 中文输入法
1. 配置系统的语言环境
2. 查看中文支持:locale locale-gen
3. 安装ibus
4. 配置开机启动

*** 简体
~/.config/ibus/rime/build/luna_pinyin.schema.yaml
找到simplification reset：1
** wine
** 声音
1. 安装alsa-ustils
2. 使用alsamixer 来解除静音：方向键移动，按m借出静音
3. 配置文件
#+BEGIN_SRC sh
  # .asoundrc
  defaults.ctl.card 1
  defaults.pcm.card 1
#+END_SRC
* vim
宏录制
#+BEGIN_SRC sh
  # start
  q a
  # do somthing
  v 用来选取内容
  C-o 回到上一个位置
  # end
  q
  # replay
  @a

#+END_SRC
* zsh
** 配置文件的读取顺序
1. /etc/zsh/zshenv     or /etc/zshrc
2.
** 更改sh
#+BEGIN_SRC sh
  # 查看当前有的sh
  chsh -l
  # 改为zsh并保存
  chsh -s /bin/zsh
#+END_SRC
*** 配置文件
在第一次进入zsh的时候会有引导，选择生成配置文件。
- /etc/zsh/zprofile : 全局配置文件，用户登录的时候加载。常用语配置一些登陆时要执行的命令。默认是一行加载/etc/profile的命令
#+BEGIN_SRC sh
  emulate sh -c 'source /etc/profile'
#+END_SRC
- ~/.zshrc : 用户配置文件
*** do 配置


* 应用
** scrot
截屏用 [[https://blog.csdn.net/zhyh1986/article/details/39831469][参考]]

* zsh
** 配置文件的读取顺序
1. /etc/zsh/zshenv     or /etc/zshrc
2.
** 更改sh
#+BEGIN_SRC sh
  # 查看当前有的sh
  chsh -l
  # 改为zsh并保存
  chsh -s /bin/zsh
#+END_SRC
*** 配置文件
在第一次进入zsh的时候会有引导，选择生成配置文件。
- /etc/zsh/zprofile : 全局配置文件，用户登录的时候加载。常用语配置一些登陆时要执行的命令。默认是一行加载/etc/profile的命令
#+BEGIN_SRC sh
  emulate sh -c 'source /etc/profile'
#+END_SRC
- ~/.zshrc : 用户配置文件
*** do 配置

