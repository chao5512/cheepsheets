#+title: pattern
* 工厂模式
[[https://juejin.im/post/6844903608266293255][Ref]]
** 分类
*** 工厂方法
*** （精简）简单/静态工厂
常用，JUC包中的Excutors就是一个简单/静态工厂
*** （增强）抽象工厂
* 拦截器模式
Intercepting Filter Pattern
** 用处
1. 对请求或者响应做预处理/后处理
2. 实例:认证\授权\记录日志
** 角色
1. filter/interceptor : 需要添加的预处理动作
2. Filter Chain : 过滤器链,内含多个filter,保证filter的插入顺序
3. Target : 被添加动作的目标
4. Filter Manager : 管理过滤器链和过滤器,实际上在小型项目或者不那么追求解耦的时候,可以没有这个manager,并且 FilterChain也可以简单的用个List代替(Kafka producer interceptor就是这么干的)
5. client : 客户,调用Target的方法.或者说是向target发送请求的角色,如此targe便可以通过filter对请求和响应做额外的处理

